name: Docker Build, Test and Push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

env:
  IMAGE_NAME: gabrielagg07/ggalvisg

jobs:

  build-test-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          go test ./... -v -run ^TestBookController$ ./book_controller_test.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=main
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          go test ./... -v -run ^TestBookControllerIntegration$ ./book_controller_integration_test.go

      - name: Docker Scout (vulnerabilities)
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          command: compare
          image: ${{ steps.meta.outputs.tags }}
          to: ${{ env.IMAGE_NAME }}:latest
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.SECRET_TOKEN }}

  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Stop any existing containers
      run: |
        docker compose down || true

    - name: Build and start services with Docker Compose
      run: |
        docker compose up --build -d

    - name: Check running containers
      run: |
        docker ps

  release:
    needs: build-test-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate release tag
        id: tag
        run: |
          VERSION="v$(date +'%Y.%m.%d')-V$(git rev-list --count HEAD)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git tag $VERSION
          git push origin $VERSION

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: Build and Push Docker Image (Release Tag)
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker image with Release Tag
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gabrielagg07/ggalvisg:${{ env.VERSION }}
